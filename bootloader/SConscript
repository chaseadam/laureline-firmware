#
# Copyright (c) Michael Tharp <gxti@partiallystapled.com>
#
# This file is distributed under the terms of the MIT License.
# See the LICENSE file at the top of this tree, or if it is missing a copy can
# be found at http://opensource.org/licenses/MIT
#


Import('env')
env = env.Clone()
env['LINK'] = './util/resize_ld.py $FLASH_SIZE $CC'

# Include path
env.PrependUnique(CPPPATH="""
src/conf
src
../src
../ports
../lib
../fatfs
../FreeRTOS/Source/include
../FreeRTOS/Source/portable/GCC/ARM_CM3
""".split())

# Regular sources
srcs = env.Object(env.Globs("""
src/bootloader.c
src/main.c
../src/board.c
../src/init.c
../lib/crc7.c
../lib/fatfs/mmc_diskio.c
../lib/freertos_plat.c
../lib/ihex.c
../lib/info_table.c
../lib/stm32/dma.c
../lib/stm32/flash.c
../lib/stm32/mmc.c
../lib/stm32/serial.c
../lib/stm32/spi.c
../ports/core_cm3.c
../ports/crt0.c
../ports/stubs.c
../ports/vectors.c
"""))

# Build third-party code with relaxed warnings
libs = env.Object(env.Globs("""
../fatfs/ff.c
../FreeRTOS/Source/list.c
../FreeRTOS/Source/portable/GCC/ARM_CM3/port.c
../FreeRTOS/Source/portable/MemMang/heap_3.c
../FreeRTOS/Source/queue.c
../FreeRTOS/Source/tasks.c
../FreeRTOS/Source/timers.c
"""), CFLAGS_USER='$CFLAGS_USER -Wno-unused-value -Wno-error=aggressive-loop-optimizations')

env.VersionH('src/version.h')


# Build a separate binary for every hardware target
results = []
for hw_maj, hw_min, hse_freq, flash_size in [
        (6, 0, 25e6, 256),
        (6, 0, 26e6, 256),
        (7, 0, 25e6, 256),
        ]:
    name = 'bootloader-hw%d.%d-%dmhz.elf' % (hw_maj, hw_min, int(hse_freq / 1e6))
    table = env.Object('src/boot_table.%s' % name, 'src/boot_table.c', CPPDEFINES={
        'HW_VERSION': '0x%02x%02x' % (hw_maj, hw_min),
        'HSE_FREQ': str(int(hse_freq)),
        })
    out = env.EmbeddedProgram(name,
            srcs + libs + table,
            script='ports/STM32F107xB.ld',
            LIBS=['m', 'nosys'],
            FLASH_SIZE='%dk' % flash_size,
            )
    dest = env.Command('../../' + name, out, Copy('$TARGET', '$SOURCE'))
    results += dest

Return('results')
